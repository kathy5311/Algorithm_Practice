#11021
a,b=int(input().split()) -> 올바르지 못한 표현
c = a+b
=> a,b=(input().split()) -> 바른 표현
    c = int(a)+int(b) 

#10813
problem1.
input()은 run time error 발생
-> sys.stdin.readline() 
입력 시 한 줄 정도는 input()사용해도 무방
단, 반복적으로 입력을 받을 때 문제

problem2.
순차적으로 리스트에 있는 값을 출력해야 할 때는 아래와 같이!
정답 코드.
for i in a:
    print(i, end=' ')

오류 예시.
'''
a,b,c,d,e = [i for i in a]
print(a,b,c,d,e)
'''
런타임에러 발생

sys.stdin.readline() 참고 문헌
https://velog.io/@yeseolee/Python-%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%9E%85%EB%A0%A5-%EC%A0%95%EB%A6%ACsys.stdin.readline

#5597
인덱스 원소 제거 방법
1. a.pop(index)
2. del a[index]
3. a.remove(value)
4. a.clear() ->리스트 초기화

#10811
temp를 이용해보자
->10813도 더 잘 풀릴수도?

#2743
문자열 개수관련 혼동되는 점
import sys
input = sys.stdin.readline()
print(len(input))
개행문자까지 개수를 세기 때문에, 딱 글자수만 알려면 len(input)-1을 해야함.

#sys.stdin.readline, readlines, read 차이
https://velog.io/@nang_zz/Python-sys.stdin.readline-readlines-read-%EC%B0%A8%EC%9D%B4
----readlines는 입력 문자를 개행문자까지 포함해서 한꺼번에 받기 때문에 주의!(ex. 9086)

#2908
문자열 뒤집기!!
1. 리스트 변환 후 list.reverse()사용
2. reversed() 사용 (list(reversed(a)))이런 식으로 사용해야 함
3. str[::-1] -> 이게 가장 편해 보인다,,,

#11718
여러 줄 문자 받기
readlines() 쓰는데, 출력하려면 ctrl+D해 줘야함.

#2738
어렵진 않다고 하는데,,, 이차원 행렬에 대한 이해 부족인듯
내가 이해하지 못한 부분은 다음과 같다.
for _ in range(N):
    a = list(map(int, sys.stdin.readline().split()))
    A.append(a)
=> A를 출력해보면, 내가 한 줄에 입력한 만큼 리스트에 들어가 있다

#10798
a = list(map(str,sys.stdin.readline()))
-> 개행문자까지 리스트에 담고 있다.
-> ['a','b','c','\n']

#2563
아이디어 차용
문제를 잘보자
"가로, 세로가 100인 도화지가 있다."
=> 100x100, 0으로 채워진 행렬을 만들어라

#2745
아스키 코드 이용하면 딕셔너리 안써도 쉽게 풀 수 있다.

#2292
모든 문제에서도 마찬가지지만, while, for문과 같은 반복문 사용할 때
제발 '='를 조심하자!!! '='를 붙일지 말지 결정하는게 크리티컬!!

#11653
문제를 너무 어렵게 생각하지 않아도 된다.
소인수분해는 계속해서 나눈다는 것과 결국에 처음 입력받은 n이 1이 되는 순간 stop

#24267
수행시간: 시그마 공식 이용하면 됌!

#24313
반례: a,b는 음수가 가능하기 때문에 c>=b가 선행되어야 함
**runtime error
if ((a*n_0)+b) <= c*n_0 and (c>=a):
이 문장을 간단히 한다고 
(a-c)n_0<=b라고 쓰면 runtime error 발생함!!!!

#2798
브루트포스에는 itertools에서 순열,조합 이용하자

#2231
elif쪽 조건을 잘 봐야한다.
i == a가 된다면 생성자가 없다는 뜻!
이 부분 잘 고려해야 함

#1018
내가 칠해준다는 마인드로 접근해보자
2가지 경우로 나누어 생각: WB, BW
범위나누는 것도 생각보다 간단히 할 수 있다!
코드를 보는 것을 추천

#10989
counting sort: 중복된 값이 많이 포함되었을 때, 양의 정수로만 이루어져 있을 때
counting sort 잘 알아두기

**메모리 효율적으로 쓰는 것도 중요!!!
-> for문에 append쓰는 것은 매우 비효율적이다.
https://wikidocs.net/21057
comprehension이나 map쓰는 것이 좋다.

#10989_memopt
리스트를 하나만 만들어 주었다!!!
문제를 잘 읽는게 좋은데, 10000번 물어볼 수 있다고 하니까 미리 [0]*10001리스트를 만들었다.

#기본 문법 tip(according to 11650)
1.  [[1,2],[2,3],[5,2]]
    이런 식으로 append하려면 => a= list(map(int, sys.stdin.readline().split()))
    이렇게 써주면 됌

2. [1,2] 이 리스트를 1 3 이런식으로 출력하려면 a,b = list이런식으로 받아주면 됌
3. sort는 굉장히 편리하다. => [[1,2],[4,1],[3,1],[1,1]]
    이러한 리스트가 있으면 0번째 인덱스를 먼저 소트하고 0번째가 같을 때 1번째를 비교하여 소트함

#18870
set을 사용하면 중복을 제거할 수 있다.

#10815
시간초과 발생
=> 문제를 보면 N,M범위가 굉장히 큰 것을 확인
=> 이진 탐색 사용!!

#1620
딕셔너리에서 값으로 key를 찾는 경우는 그냥 inverse_dict을 만들어주는게 효율적

#11478
set과 list의 차이!!
set: O(1), 인덱스 접근 불가, 존재 여부만 확인 가능
list: O(N)

#1735
분수의 합을 구할 때는 일단 분수의 합을 해준 후에
마지막으로 최대공약수로 나누어 주어야 함

#9012
check = sys.stdin.readline().split()
check의 문자형은 str이고, 이 경우 출력해보면 ['check']이런 형식의 리스트가 출력
=> 문자열 사용하려면 check=check[0] 해 주어야 함.
이 보다 더 좋은 방법: input() 사용하면 문자열 요소 그대로 쓸 수 있음
stack 이용해서 풀기

#12789
반례: 2 1 3
목표하는게 스택의 첫 번째라면 당연히 빼줘야 함

Tips!
극단의 상황까지 예시를 생각해보자.
ex. 2164(N=1일 때를 생각해 봐야 함.)

#2346
deque.rotate() 이용하는 것이 훨씬 빠르다
음수가 들어가면 왼쪽으로 , 양수면 오른쪽으로 회전

#factorial
math import 쓰는게 가장 시간이 빠르다

#20920
sorted는 다중 조건을 설정하여 정렬할 수 있다.
a=sorted(word_dict.items(), key=lambda x :(-x[1], -len(x[0]),x[0]))
또한 숫자형의 경우, '-'를 붙여주면 각각의 조건마다 reverse조건을 추가해주는 꼴이다.
